{"version":3,"sources":["components/title/title.component.tsx","components/genAndType/genAndType.component.tsx","components/search/search.component.tsx","components/homeToolbar/homeToolbar.component.tsx","asset/pokemonId.ts","components/card/card.component.tsx","components/cards/cards.component.tsx","pages/homepage/homepage.component.tsx","components/infoCard/infoCard.component.tsx","components/infoContainer/infoContainer.component.tsx","components/informationToolbar/informationToolbar.component.tsx","pages/information/information.component.tsx","App.tsx","index.tsx"],"names":["Title","title","className","GenAndType","gen","setGen","h","v","maxW","iconSize","fontWeight","fontSize","color","bg","borderColor","size","value","onChange","event","target","Search","handleChange","spacing","variant","placeholder","as","width","height","lineHeight","transition","_hover","_active","transform","_focus","boxShadow","HomeToolBar","genTitle","PokemonId","id","n","z","idTitle","toString","length","Array","join","typesFetcher","key","pokiId","a","axios","get","data","types","Card","name","genName","_","num","typesData","useQuery","staleTime","Infinity","console","log","src","style","marginTop","marginLeft","alt","map","type","Cards","pokemonData","loading","url","arr","split","parseInt","to","pokemonFetcher","HomePage","React","useState","isLoading","searchTerm","setSearchTerm","filteredPokemon","pokemon_species","filter","toLocaleLowerCase","includes","main_region","e","InfoCard","informationData","weight","imgStyles","marginRight","float","InfoContainer","InformationToolbar","prev","next","informationFetcher","InfoPage","useParams","App","exact","path","component","Information","ReactDOM","render","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.fbcd5407.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './title.style.css'\r\n\r\ninterface Props {\r\n  title: string\r\n}\r\n\r\nconst Title: React.FC<Props> = ({ title }) => {\r\n  return (\r\n    <div className='title'>\r\n      <div className='titleClip' />\r\n      <p className='titlespan'>{title}</p>\r\n    </div>\r\n  )\r\n}\r\nexport default Title\r\n","import React from 'react'\r\nimport { Select, Center } from '@chakra-ui/react'\r\n\r\nimport './genAndType.style.css'\r\n\r\ninterface Props {\r\n  gen: string\r\n  setGen: (value: string) => void\r\n}\r\n\r\nconst GenAndType: React.FC<Props> = ({ gen, setGen }) => {\r\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setGen(event.target.value)\r\n  }\r\n  return (\r\n    <div className='filtersBase'>\r\n      <Center h='100%' v='100%'>\r\n        <Select\r\n          maxW='150px'\r\n          iconSize='md'\r\n          fontWeight='200'\r\n          fontSize='16px'\r\n          color='#363636'\r\n          bg='#B2DEFF'\r\n          borderColor='#B2DEFF'\r\n          size='sm'\r\n          value={gen}\r\n          onChange={handleChange}\r\n        >\r\n          <option value='1'>Generation 1</option>\r\n          <option value='2'>Generation 2</option>\r\n          <option value='3'>Generation 3</option>\r\n          <option value='4'>Generation 4</option>\r\n          <option value='5'>Generation 5</option>\r\n          <option value='6'>Generation 6</option>\r\n          <option value='7'>Generation 7</option>\r\n          <option value='8'>Generation 8</option>\r\n        </Select>\r\n      </Center>\r\n    </div>\r\n  )\r\n}\r\nexport default GenAndType\r\n","import React from 'react'\r\n\r\nimport { Input, HStack, Center, Box } from '@chakra-ui/react'\r\n\r\nimport './search.style.css'\r\n\r\ninterface Props {\r\n  handleChange: (e: any) => void\r\n}\r\nconst Search: React.FC<Props> = ({ handleChange }) => {\r\n  return (\r\n    <div className='searchBase'>\r\n      <Center h='100%' v='100%'>\r\n        <HStack spacing='20px'>\r\n          <Input\r\n            maxW='150px'\r\n            variant='flushed'\r\n            fontWeight='200'\r\n            fontSize='20px'\r\n            color='#363636'\r\n            borderColor='#363636'\r\n            placeholder='Name'\r\n            onChange={handleChange}\r\n          />\r\n          <Box\r\n            as='button'\r\n            width='80px'\r\n            bg='#B2DEFF'\r\n            height='35px'\r\n            fontWeight='200'\r\n            lineHeight='1.2'\r\n            borderColor='#B2DEFF'\r\n            fontSize='18px'\r\n            color='#363636'\r\n            transition='all 0.2s cubic-bezier(.08,.52,.52,1)'\r\n            _hover={{ bg: '#ebedf0' }}\r\n            _active={{\r\n              bg: '#dddfe2',\r\n              transform: 'scale(0.98)',\r\n              borderColor: '#bec3c9',\r\n            }}\r\n            _focus={{\r\n              boxShadow:\r\n                '0 0 1px 2px rgba(88, 144, 255, .75), 0 1px 1px rgba(0, 0, 0, .15)',\r\n            }}\r\n          >\r\n            Search\r\n          </Box>\r\n        </HStack>\r\n      </Center>\r\n    </div>\r\n  )\r\n}\r\nexport default Search\r\n","import React from 'react'\r\n\r\nimport Title from '../title/title.component'\r\nimport GenAndType from '../genAndType/genAndType.component'\r\nimport Search from '../search/search.component'\r\n\r\nimport './homeToolbar.style.css'\r\n\r\ninterface Props {\r\n  handleChange: (e: any) => void\r\n  gen: string\r\n  setGen: (value: string) => void\r\n}\r\nconst HomeToolBar: React.FC<Props> = ({ gen, setGen, handleChange }) => {\r\n  let genTitle = 'Gen - ' + gen\r\n  return (\r\n    <div className='toolbar'>\r\n      <GenAndType gen={gen} setGen={setGen} />\r\n      <Title title={genTitle} />\r\n      <Search handleChange={handleChange} />\r\n    </div>\r\n  )\r\n}\r\nexport default HomeToolBar\r\n","export const PokemonId = (id: number) => {\r\n  function pad(n: string, width: number, z: string) {\r\n    z = z || '0'\r\n    n = n + ''\r\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n\r\n  }\r\n  let idTitle = pad(id.toString(), 3, '')\r\n  idTitle = '#' + idTitle\r\n\r\n  return idTitle\r\n}\r\n","import React from 'react'\r\nimport * as _ from 'lodash'\r\nimport { PokemonId } from '../../asset/pokemonId'\r\nimport './card.styles.css'\r\nimport axios from 'axios'\r\nimport { useQuery } from 'react-query'\r\n\r\ninterface Props {\r\n  genName?: string\r\n  name: string\r\n  id: number\r\n}\r\ninterface TypesResponse {\r\n  types: Types[]\r\n}\r\ninterface Types {\r\n  slot: string\r\n  type: {\r\n    name: string\r\n    url: string\r\n  }\r\n}\r\n\r\nconst typesFetcher = async (key: string, pokiId: string) => {\r\n  const { data } = await axios.get<TypesResponse>(\r\n    `https://pokeapi.co/api/v2/pokemon/${pokiId}`\r\n  )\r\n  return data.types\r\n}\r\n\r\nconst Card: React.FC<Props> = ({ name, id, genName }) => {\r\n  // formatting name and serial number\r\n  name = _.startCase(_.toLower(name))\r\n\r\n  const num = PokemonId(id)\r\n\r\n  // image tag css properties\r\n  const imgStyles: React.CSSProperties = {\r\n    height: '100px',\r\n    width: '100px',\r\n    marginTop: '10px',\r\n    marginLeft: '20px',\r\n  }\r\n  const { data: typesData } = useQuery(['types', id], typesFetcher, {\r\n    staleTime: Infinity,\r\n  })\r\n  console.log('rip', typesData)\r\n\r\n  return (\r\n    <div className='homeCard'>\r\n      <div className='serial'>{num}</div>\r\n      <div className='homeImage'>\r\n        <img\r\n          src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`}\r\n          style={{ ...imgStyles }}\r\n          alt='not found'\r\n        />\r\n      </div>\r\n      <div className='homeName'>{name}</div>\r\n      <div className='homeTypes'>\r\n        {typesData?.map(({ type }) => {\r\n          return (\r\n            <div key={type.name} className='type'>\r\n              {type.name}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n      <div className='genName'>{genName}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Card from '../../components/card/card.component'\r\n\r\nimport './cards.style.css'\r\n\r\ninterface Props {\r\n  genName?: string\r\n  pokemonData: PokemonResponseResultItem[]\r\n  loading: boolean\r\n}\r\n\r\ninterface PokemonResponseResultItem {\r\n  name: string\r\n  url: string\r\n}\r\n\r\nconst Cards: React.FC<Props> = ({ pokemonData, loading, genName }) => {\r\n  return (\r\n    <div className='container'>\r\n      {loading ? (\r\n        <div>Loading</div>\r\n      ) : (\r\n        <div className='cards'>\r\n          {pokemonData.map(({ name, url }) => {\r\n            let arr = url.split('/')\r\n            let id = parseInt(arr[arr.length - 2])\r\n            return (\r\n              <Link key={url} to={`/${id}`}>\r\n                <Card key={id} name={name} id={id} genName={genName} />\r\n              </Link>\r\n            )\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default Cards\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useQuery } from 'react-query'\r\n\r\nimport HomeToolBar from '../../components/homeToolbar/homeToolbar.component'\r\nimport Cards from '../../components/cards/cards.component'\r\n\r\nimport './homepage.style.css'\r\n\r\ninterface PokemonResponse {\r\n  main_region: MainRegion\r\n  pokemon_species: PokemonResponseResultItem[]\r\n}\r\ninterface MainRegion {\r\n  name: string\r\n  url: string\r\n}\r\ninterface PokemonResponseResultItem {\r\n  name: string\r\n  url: string\r\n}\r\n\r\nconst pokemonFetcher = async (key: string, gen: string) => {\r\n  const { data } = await axios.get<PokemonResponse>(\r\n    `https://pokeapi.co/api/v2/${key}/${gen}`\r\n  )\r\n  return data\r\n}\r\n\r\nconst HomePage: React.FC = () => {\r\n  const [gen, setGen] = React.useState('1')\r\n  const { data: pokemonData, isLoading: loading } = useQuery(\r\n    ['generation', gen],\r\n    pokemonFetcher,\r\n    {\r\n      staleTime: Infinity,\r\n    }\r\n  )\r\n  const [searchTerm, setSearchTerm] = React.useState('')\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.target.value)\r\n  }\r\n\r\n  const filteredPokemon = pokemonData?.pokemon_species?.filter(({ name }) =>\r\n    name.toLocaleLowerCase().includes(searchTerm)\r\n  )\r\n  console.log(pokemonData?.main_region.name)\r\n\r\n  return (\r\n    <div className='home'>\r\n      <HomeToolBar gen={gen} setGen={setGen} handleChange={handleChange} />\r\n      {filteredPokemon ? (\r\n        <Cards\r\n          pokemonData={filteredPokemon}\r\n          loading={loading}\r\n          genName={pokemonData?.main_region.name}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\nexport default HomePage\r\n","import React from 'react'\r\nimport * as _ from 'lodash'\r\n\r\nimport './infoCard.style.css'\r\n\r\ninterface Props {\r\n  informationData?: informationData\r\n}\r\ninterface informationData {\r\n  name: string\r\n  height: string\r\n  weight: string\r\n}\r\n\r\nconst InfoCard: React.FC<Props> = ({ informationData }) => {\r\n  const name = _.startCase(_.toLower(informationData?.name))\r\n  const height = parseInt(informationData?.height!) / 10\r\n  const weight = parseInt(informationData?.weight!) / 10\r\n  return (\r\n    <div className='infoCard'>\r\n      <div className='infoName'>{name} </div>\r\n      <div className='details'>\r\n        <h1>Weight➩ {weight} kg</h1>\r\n        <h1>Height➩ {height} m</h1>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoCard\r\n","import React from 'react'\r\n\r\nimport InfoCard from '../infoCard/infoCard.component'\r\n\r\nimport './infoContainer.style.css'\r\n\r\ninterface Props {\r\n  informationData?: informationData\r\n  id: number\r\n}\r\ninterface informationData {\r\n  name: string\r\n  height: string\r\n  weight: string\r\n}\r\nconst imgStyles: React.CSSProperties = {\r\n  height: '300px',\r\n  width: '300px',\r\n  marginTop: '150px',\r\n  marginRight: '10%',\r\n  float: 'right',\r\n}\r\n\r\nconst InfoContainer: React.FC<Props> = ({ id, informationData }) => {\r\n  return (\r\n    <div className='infoContainer'>\r\n      <div className='infoImage'>\r\n        <img\r\n          src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`}\r\n          style={{ ...imgStyles }}\r\n          alt='not found'\r\n        />\r\n      </div>\r\n      <InfoCard informationData={informationData} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoContainer\r\n","import React from 'react'\r\n\r\nimport Title from '../title/title.component'\r\nimport { PokemonId } from '../../asset/pokemonId'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './informationToolbar.style.css'\r\n\r\ninterface Props {\r\n  id: number\r\n}\r\n\r\nconst InformationToolbar: React.FC<Props> = ({ id }) => {\r\n  let idTitle = PokemonId(id)\r\n  let prev = id - 1,\r\n    next = id + 1\r\n  if (id <= 1) {\r\n    prev = 858\r\n  } else if (id >= 858) {\r\n    next = 1\r\n  }\r\n\r\n  return (\r\n    <div className='toolbar'>\r\n      <Link to={`/${prev}`}>\r\n        <div className='prev'>{`⇚ ${PokemonId(prev)}`}</div>\r\n      </Link>\r\n\r\n      <Title title={idTitle} />\r\n      <Link to={`/${next}`}>\r\n        <div className='next'>{`${PokemonId(next)} ⇛`}</div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\nexport default InformationToolbar\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useQuery } from 'react-query'\r\n\r\nimport { useParams } from 'react-router'\r\n\r\nimport InfoContainer from '../../components/infoContainer/infoContainer.component'\r\nimport InformationToolbar from '../../components/informationToolbar/informationToolbar.component'\r\n\r\nimport './information.style.css'\r\n\r\ninterface PokemonResponse {\r\n  name: string\r\n  height: string\r\n  weight: string\r\n}\r\ninterface Params {\r\n  id: number\r\n}\r\nconst informationFetcher = async (id: number) => {\r\n  const { data } = await axios.get<PokemonResponse>(\r\n    `https://pokeapi.co/api/v2/pokemon/${id}`\r\n  )\r\n  return data\r\n}\r\n\r\nconst InfoPage: React.FC<Params> = () => {\r\n  let { id } = useParams<any>()\r\n  id = parseInt(id)\r\n\r\n  const { data: informationData } = useQuery(id, informationFetcher)\r\n\r\n  return (\r\n    <div className='information'>\r\n      <InformationToolbar id={id} />\r\n      <InfoContainer id={id} informationData={informationData} />\r\n    </div>\r\n  )\r\n}\r\nexport default InfoPage\r\n","import React from 'react'\n\nimport { Switch, Route, Link } from 'react-router-dom'\n\nimport HomePage from './pages/homepage/homepage.component'\nimport Information from './pages/information/information.component'\n\nimport './App.css'\n\nconst App: React.FC = () => {\n  return (\n    <div className='app'>\n      <Link to='/' className='heading'>\n        <img className='eevee' src='/pokedex-2.0/eevee.gif' alt='not found' />\n        <h1 className='headingText'>DeX</h1>\n      </Link>\n      <Switch>\n        <Route exact path='/' component={HomePage} />\n        <Route path='/:id' component={Information} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport { ReactQueryDevtools } from 'react-query-devtools'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <ChakraProvider>\n    <HashRouter>\n      <App />\n      <ReactQueryDevtools initialIsOpen />\n    </HashRouter>\n  </ChakraProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}